#!/bin/sh

echo "Build infrastructure package"

OLD_PWD=$(pwd)

SCRIPT=$(readlink -f "$0")
SCRIPTPATH=$(dirname "$SCRIPT")
. $SCRIPTPATH/gomeet-common

[ -z $GOMEET_JWT_SECRET ] && GOMEET_JWT_SECRET=$(openssl rand -base64 32)

$SCRIPTPATH/gomeet-fetch-all

SRCPATH=$GOPATH/src/$GOGS_NAME/$GOGS_ORG
RLIST=$SCRIPTPATH/../gomeet-services

if [ ! -d "$SRCPATH" ]; then
  echo "\$SRCPATH not found it will be created" >&2
  mkdir -p $SRCPATH
fi

WIN_BAREMETAL_DEST_PKG=bin
NIX_BAREMETAL_DEST_PKG=opt/$GOGS_ORG/bin

NIX_BAREMETAL_DEST_CNF=etc

# 1. Check if all repositories are clean and exist
HAS_ERR=0
cat $RLIST | while read line
do
  svc=$(echo $line | tr -s " ")
  s_name=$(echo "$svc" | cut -d " " -f1)
  s_version=$(echo "$svc" | cut -d " " -f2)
  [ $s_version = $s_name ] && s_version="master"

  if startswith "$s_name" "$GOMEET_SVC_PREFIX"; then
    echo "Check $s_name service"
    if [ -d "$SRCPATH/$s_name" ]; then
      cd $SRCPATH/$s_name
      echo "$s_name repository exist"
      git_changed_count=$(git status --porcelain | wc -l)
      if [ "$git_changed_count" != "0" ]; then
        HAS_ERR=1
        echo "Error: $SRCPATH/$s_name repository has uncommited files"
      fi
      cd $OLD_PWD
    else
      HAS_ERR=1
      echo "Error: $SRCPATH/$s_name repository doesn't exist"
    fi
  fi
done
if [ "$HAS_ERR" = "1" ]; then
  echo "some errors occurred : fix this"
  exit 1
fi

BASE_PKG_DIR="_build/packaged"

API_GATEWAY_PORT=8080
BO_GATEWAY_PORT=8081
START_COUNTER_PORT=130 # 13000 --> 131%(process_num)02d, 132%(process_num)02d, 133%(process_num)02d, etc...

#GLOBAL_OPTIONS='-j "plop"' # for exemple -j "totot"
GLOBAL_OPTIONS='-j "'$(openssl rand -base64 32)'"'
incr_port=0
api_gateway_opts=""
# 2. fetch on tag
cat $RLIST | {
  while read line
  do
    svc=$(echo $line | tr -s " ")
    if startswith "$svc" "#" ; then
      echo "Ignore comment: $svc"
      continue
    fi
    s_name=$(echo "$svc" | cut -d " " -f1)
    s_version=$(echo "$svc" | cut -d " " -f2)
    [ "$s_version" = "$s_name" ] && s_version="master"

    if startswith "$s_name" "$GOMEET_SVC_PREFIX"; then
      echo "Build $s_name service"
      if [ -d "$SRCPATH/$s_name" ]; then
        case $s_name in
          "$GOMEET_SVC_PREFIX"api-gateway)
            s_port=$API_GATEWAY_PORT
            s_opts="$GLOBAL_OPTIONS gomeet_gateway_opts"
            ;;
          "$GOMEET_SVC_PREFIX"bo-gateway)
            s_port=$BO_GATEWAY_PORT
            s_opts="$GLOBAL_OPTIONS gomeet_gateway_opts"
            ;;
          *)
            incr_port=$(($incr_port+1))
            s_port=$(($START_COUNTER_PORT + $incr_port))
            # s_port="$s_port%(process_num)02d"
            s_port=$s_port"00"
            api_gateway_opts="$api_gateway_opts -$(echo "$s_name" | sed 's/'$GOMEET_SVC_PREFIX'/svc-/g')-address=\"localhost:$s_port\""
            s_opts="$GLOBAL_OPTIONS"
            ;;
        esac
        cd $SRCPATH/$s_name
        echo "$s_name repository exist checkout $s_version"
        # Check if git is clean
        git_changed_count=$(git status --porcelain | wc -l)
        if [ "$git_changed_count" != "0" ]; then
          echo "Error: $SRCPATH/$s_name repository has uncommited files"
          exit 1
        fi
        BUILD_BRANCH_NAME="infra/build-$s_version"
        case $s_version in
          "master")
            git checkout master -b $BUILD_BRANCH_NAME ;;
          "develop")
            git checkout develop -b $BUILD_BRANCH_NAME ;;
          *)
            git checkout tags/v$s_version -b $BUILD_BRANCH_NAME ;;
        esac

        $GOMEET_MAKE package

        pkg_dirs=$(echo -n $(find $BASE_PKG_DIR/* -type d))
        for pkg_dir in $pkg_dirs
        do
          str_pkg_dir=$(echo $pkg_dir)
          arch=$(echo $(basename $pkg_dir))
          BASE_BUILD_DIR=$SCRIPTPATH/../$BASE_PKG_DIR
          BAREMETAL_DIR=$BASE_BUILD_DIR/baremetal/$arch
          case "$arch" in
            windows*)
              s_bin_name=$s_name".exe"
              dest_bin_dir=$BAREMETAL_DIR/$WIN_BAREMETAL_DEST_PKG
              ;;
            linux*|darwin*|openbsd*)
              s_bin_name=$s_name
              dest_bin_dir=$BAREMETAL_DIR/$NIX_BAREMETAL_DEST_PKG
              conf_dir=$BAREMETAL_DIR/$NIX_BAREMETAL_DEST_CNF
              conf_templates_dir=$SCRIPTPATH/../templates/baremetal/NIX/etc/
              mkdir -p $conf_dir/supervisor/conf.d
              cat $conf_templates_dir/supervisor/conf.d/service.conf.tpl |\
                  sed 's/gomeet-service-name/'$s_name'/g' |\
                  sed 's/gomeet-service-port/'$s_port'/g' |\
                  sed 's/gomeet-service-opts/'"$s_opts"'/g' > $conf_dir/supervisor/conf.d/$s_name.conf
            if [ ! -e "$conf_dir/supervisor/supervisord.conf" ] ; then
                cat $conf_templates_dir/supervisor/supervisord.conf.tpl > $conf_dir/supervisor/supervisord.conf
                echo $conf_dir/supervisor/supervisord.conf
              fi
              ;;
            *)
              echo "Unknow $arch"
              continue ;;
          esac

          mkdir -p $dest_bin_dir
          cp $pkg_dir/$s_bin_name $dest_bin_dir/$s_bin_name
          cat $pkg_dir/SHA256SUM >> $dest_bin_dir/SHA256SUMS

          DOCKER_COMPOSE_DIR=$BASE_BUILD_DIR/docker-compose
          mkdir -p $DOCKER_COMPOSE_DIR
          K8S_DIR=$BASE_BUILD_DIR/k8s
          mkdir -p $K8S_DIR

        done

        git reset --hard
        git checkout master
        git branch -d $BUILD_BRANCH_NAME

        cd $OLD_PWD

      else
        echo "Error: $SRCPATH/$s_name repository doesn't exist"
        exit 1
      fi
    fi
  done
  ls _build/packaged/baremetal/**/etc/supervisor/conf.d/*-gateway.conf | while read conf_gw_file
  do
    sed -i'' 's/gomeet_gateway_opts/'"$(echo $api_gateway_opts | tr -s " ")"'/g' $conf_gw_file
  done
}
